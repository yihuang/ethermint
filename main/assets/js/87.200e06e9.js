(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{603:function(e,t,n){"use strict";n.r(t);var a=n(0),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"use-cases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[e._v("#")]),e._v(" Use Cases")]),e._v(" "),n("p",{attrs:{synopsis:""}},[e._v("Check out the 2 use cases for the Ethermint project.")]),e._v(" "),n("h2",{attrs:{id:"ethermint-chain"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ethermint-chain"}},[e._v("#")]),e._v(" Ethermint chain")]),e._v(" "),n("p",[e._v("The Ethermint blockchain provides Ethereum developers to deploy their smart contracts to the\nEthermint EVM and get the benefits of a fast-finality Proof-of-Stake (PoS) chain. Developers will\nalso benefit from highly-reliable clients from testnets can be used to test and deploy their\ncontracts.")]),e._v(" "),n("p",[e._v("Ethermint will also offer built-in interoperability functionalities with other Cosmos and BFT chains by using "),n("a",{attrs:{href:"https://cosmos.network/ibc",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBC"),n("OutboundLink")],1),e._v(". Developers can also benefit from using a bridge network to enable interoperability between mainnet Ethereum and Ethermint.")]),e._v(" "),n("h2",{attrs:{id:"evm-module-dependency"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#evm-module-dependency"}},[e._v("#")]),e._v(" EVM module dependency")]),e._v(" "),n("p",[e._v("The EVM module (aka "),n("a",{attrs:{href:"https://github.com/tharsis/ethermint/tree/main/x/evm",target:"_blank",rel:"noopener noreferrer"}},[e._v("x/evm"),n("OutboundLink")],1),e._v(") packaged inside\nEthermint can be used separately as its own standalone module. This can be added as a dependency to\nany Cosmos chain, which will allow for smart contract support.")]),e._v(" "),n("p",[e._v("Importing EVM module can also enable use cases such as Proof-of-Authority\n("),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Proof_of_authority",target:"_blank",rel:"noopener noreferrer"}},[e._v("PoA"),n("OutboundLink")],1),e._v(") chains for enterprise and consortium\nprojects. Every chain on Cosmos is an "),n("a",{attrs:{href:"https://docs.cosmos.network/master/intro/why-app-specific.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("application-specific\nblockchain"),n("OutboundLink")],1),e._v(" that is customized for\nthe business logic defined by a single application. Thus, by using a predefined validator set and\nthe EVM module as a dependency, enables projects with fast finality, interoperability as well as\nProof-of-Stake (PoS) consensus.")]),e._v(" "),n("h2",{attrs:{id:"trade-offs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#trade-offs"}},[e._v("#")]),e._v(" Trade offs")]),e._v(" "),n("p",[e._v("Either option above will allow for fast finality, using a PoS consensus engine. Using the EVM module\nas a dependency will require the importing of the EVM and the maintaining of the chain (including\nvalidator sets, code upgrades/conformance, community engagement, incentives, etc), thus it incurs on a\nhigher operation cost. The benefit of importing the EVM module to your chains is that it allows for\ngranular control over the network and chain specific configurations/features that may not be\navailable in the Ethermint chain such as developing a module or importing a third-party one.")]),e._v(" "),n("p",[e._v("Using Ethermint chain will allow for the direct deployment of smart contracts to the Ethermint\nnetwork. Utilizing the Ethermint client will defer the chain maintenance to the Ethermint network\nand allow for the participation in a more mature blockchain. The Ethermint client will also offer\n(in the near future) IBC compatibility which allows for interoperability between different network.")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th"),e._v(" "),n("th",[e._v("Ethermint Chain")]),e._v(" "),n("th",[e._v("x/evm dependency")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("Maintenance")]),e._v(" "),n("td",[e._v("Lower")]),e._v(" "),n("td",[e._v("Higher")])]),e._v(" "),n("tr",[n("td",[e._v("Sovereignty (validator, config, params)")]),e._v(" "),n("td",[e._v("Lower")]),e._v(" "),n("td",[e._v("Higher")])]),e._v(" "),n("tr",[n("td",[e._v("Storage requirements")]),e._v(" "),n("td",[e._v("Lower")]),e._v(" "),n("td",[e._v("Higher")])])])]),e._v(" "),n("h2",{attrs:{hide:"",id:"next"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[e._v("#")]),e._v(" Next")]),e._v(" "),n("p",{attrs:{hide:""}},[e._v("Read the available Ethermint "),n("RouterLink",{attrs:{to:"/intro/resources.html"}},[e._v("resources")])],1)])}),[],!1,null,null,null);t.default=r.exports}}]);