(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{651:function(e,t,r){"use strict";r.r(t);var n=r(0),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"encoding"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#encoding"}},[e._v("#")]),e._v(" Encoding")]),e._v(" "),r("p",{attrs:{synopsis:""}},[e._v("Learn about the encoding formats used on Ethermint.")]),e._v(" "),r("h2",{attrs:{id:"pre-requisite-readings"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pre-requisite-readings"}},[e._v("#")]),e._v(" Pre-requisite Readings")]),e._v(" "),r("ul",[r("li",{attrs:{prereq:""}},[r("a",{attrs:{href:"https://docs.cosmos.network/master/core/encoding.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cosmos SDK Encoding"),r("OutboundLink")],1)]),e._v(" "),r("li",{attrs:{prereq:""}},[r("a",{attrs:{href:"https://eth.wiki/en/fundamentals/rlp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ethereum RLP"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"encoding-formats"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#encoding-formats"}},[e._v("#")]),e._v(" Encoding Formats")]),e._v(" "),r("h3",{attrs:{id:"protocol-buffers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#protocol-buffers"}},[e._v("#")]),e._v(" Protocol Buffers")]),e._v(" "),r("p",[e._v("The Cosmos "),r("a",{attrs:{href:"https://stargate.cosmos.network/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stargate"),r("OutboundLink")],1),e._v(" release introduces\n"),r("a",{attrs:{href:"https://developers.google.com/protocol-buffers",target:"_blank",rel:"noopener noreferrer"}},[e._v("protobuf"),r("OutboundLink")],1),e._v(" as the main encoding format for both\nclient and state serialization. All the EVM module structs that are used for state and clients\n(transaction messages, genesis, query services, etc) will be implemented as protocol buffer messages.")]),e._v(" "),r("h3",{attrs:{id:"amino"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#amino"}},[e._v("#")]),e._v(" Amino")]),e._v(" "),r("p",[e._v("The Cosmos SDK also supports the legacy Amino encoding format for backwards compatibility with\nprevious versions, specially for client encoding. Ethermint will not support Amino in the EVM module\nonce the migration to SDK "),r("code",[e._v("v0.40")]),e._v(" is finalized.")]),e._v(" "),r("h3",{attrs:{id:"rlp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rlp"}},[e._v("#")]),e._v(" RLP")]),e._v(" "),r("p",[e._v("Recursive Length Prefix ("),r("a",{attrs:{href:"https://eth.wiki/en/fundamentals/rlp",target:"_blank",rel:"noopener noreferrer"}},[e._v("RLP"),r("OutboundLink")],1),e._v("), is an encoding/decoding algorithm that serializes a message and\nallows for quick reconstruction of encoded data. Ethermint uses RLP to encode/decode Ethereum\nmessages for JSON-RPC handling to conform messages to the proper Ethereum format. This allows\nmessages to be encoded and decoded in the exact format as Ethereum's.")]),e._v(" "),r("p",[e._v("Each message type defined on the EVM module define the "),r("code",[e._v("EncodeRLP")]),e._v(" and "),r("code",[e._v("DecodeRLP")]),e._v(" methods which\nimplement the "),r("code",[e._v("rlp.Encoder")]),e._v(" and "),r("code",[e._v("rlp.Decoder")]),e._v(" interfaces respectively. The RLP encode method is used\nto sign bytes and transactions in "),r("code",[e._v("RLPSignBytes")]),e._v(" and "),r("code",[e._v("Sign")]),e._v(".")]),e._v(" "),r("h2",{attrs:{hide:"",id:"next"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[e._v("#")]),e._v(" Next")]),e._v(" "),r("p",{attrs:{hide:""}},[e._v("Learn how "),r("RouterLink",{attrs:{to:"/core/pending_state.html"}},[e._v("pending state")]),e._v(" is handled on Ethermint.")],1)])}),[],!1,null,null,null);t.default=o.exports}}]);