(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{648:function(t,e,n){"use strict";n.r(e);var r=n(0),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"transactions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#transactions"}},[t._v("#")]),t._v(" Transactions")]),t._v(" "),n("h2",{attrs:{id:"routing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#routing"}},[t._v("#")]),t._v(" Routing")]),t._v(" "),n("p",[t._v("Ethermint needs to parse and handle transactions routed for both the EVM and for the Cosmos hub. We\nattempt to achieve this by mimicking "),n("a",{attrs:{href:"https://github.com/ethereum/go-ethereum",target:"_blank",rel:"noopener noreferrer"}},[t._v("Geth's"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("Transaction")]),t._v("\nstructure and treat it as a unique Cosmos SDK message type. An Ethereum transaction is a single\n"),n("a",{attrs:{href:"https://godoc.org/github.com/cosmos/cosmos-sdk/types#Msg",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("sdk.Msg")]),n("OutboundLink")],1),t._v(" contained in an\n"),n("a",{attrs:{href:"https://godoc.org/github.com/cosmos/cosmos-sdk/x/auth#StdTx",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("auth.StdTx")]),n("OutboundLink")],1),t._v(". All relevant Ethereum\ntransaction information is contained in this message. This includes the signature, gas, payload,\netc.")]),t._v(" "),n("p",[t._v("Being that Ethermint implements the Tendermint ABCI application interface, as transactions are\nconsumed, they are passed through a series of handlers. Once such handler, the "),n("code",[t._v("AnteHandler")]),t._v(", is\nresponsible for performing preliminary message execution business logic such as fee payment,\nsignature verification, etc. This is particular to Cosmos SDK routed transactions. Ethereum routed\ntransactions will bypass this as the EVM handles the same business logic.")]),t._v(" "),n("p",[t._v("Ethereum routed transactions coming from a Web3 source are expected to be "),n("RouterLink",{attrs:{to:"/core/encoding.html#rlp"}},[t._v("RLP")]),t._v(" encoded, however all\ninternal interaction between Ethermint and Tendermint will utilize one of the supported encoding\nformats: "),n("RouterLink",{attrs:{to:"/core/encoding.html#protocol-buffers"}},[t._v("Protobuf")]),t._v(" and "),n("RouterLink",{attrs:{to:"/core/encoding.html#amino"}},[t._v("Amino")]),t._v(".")],1),t._v(" "),n("h2",{attrs:{id:"transaction-formats"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#transaction-formats"}},[t._v("#")]),t._v(" Transaction formats")]),t._v(" "),n("ul",[n("li",[t._v("Cosmos transactions")]),t._v(" "),n("li",[t._v("Ethereum transaction")])]),t._v(" "),n("h2",{attrs:{id:"signatures"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#signatures"}},[t._v("#")]),t._v(" Signatures")]),t._v(" "),n("p",[t._v("Ethermint supports "),n("a",{attrs:{href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP-155"),n("OutboundLink")],1),t._v("\nsignatures. A "),n("code",[t._v("Transaction")]),t._v(" is expected to have a single signature for Ethereum routed transactions.\nHowever, just as in Cosmos, Ethermint will support multiple signers for non-Ethereum transactions.\nSignatures over the "),n("code",[t._v("Transaction")]),t._v(" type are identical to Ethereum and the signatures will not be\nduplicated in the embedding\n"),n("a",{attrs:{href:"https://godoc.org/github.com/cosmos/cosmos-sdk/x/auth#StdTx",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("auth.StdTx")]),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h2",{attrs:{hide:"",id:"next"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[t._v("#")]),t._v(" Next")]),t._v(" "),n("p",{attrs:{hide:""}},[t._v("Learn about how "),n("RouterLink",{attrs:{to:"/basics/gas.html"}},[t._v("gas")]),t._v(" is used on Ethermint")],1)])}),[],!1,null,null,null);e.default=s.exports}}]);