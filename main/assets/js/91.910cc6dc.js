(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{610:function(t,e,a){"use strict";a.r(e);var c=a(0),l=Object(c.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[t._v("#")]),t._v(" State")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("x/evm")]),t._v(" module keeps the following objects in state:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Key")]),t._v(" "),a("th",[t._v("Value")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Block Height")]),t._v(" "),a("td",[a("code",[t._v("[]byte{1} + []byte(block.Hash)")])]),t._v(" "),a("td",[a("code",[t._v("BigEndian(block.Height)")])])]),t._v(" "),a("tr",[a("td",[t._v("Bloom")]),t._v(" "),a("td",[a("code",[t._v("[]byte{2} + []byte(block.Height)")])]),t._v(" "),a("td",[a("code",[t._v("[]byte(Bloom)")])])]),t._v(" "),a("tr",[a("td",[t._v("Tx Logs")]),t._v(" "),a("td",[a("code",[t._v("[]byte{3} + []byte(tx.Hash)")])]),t._v(" "),a("td",[a("code",[t._v("amino([]Log)")])])]),t._v(" "),a("tr",[a("td",[t._v("Account Code")]),t._v(" "),a("td",[a("code",[t._v("[]byte{4} + []byte(code.Hash)")])]),t._v(" "),a("td",[a("code",[t._v("[]byte(Code)")])])]),t._v(" "),a("tr",[a("td",[t._v("Account Storage")]),t._v(" "),a("td",[a("code",[t._v("[]byte{5} + []byte(address) + []byte(state.Key)")])]),t._v(" "),a("td",[a("code",[t._v("[]byte(state.Value)")])])]),t._v(" "),a("tr",[a("td",[t._v("Chain Config")]),t._v(" "),a("td",[a("code",[t._v("[]byte{6}")])]),t._v(" "),a("td",[a("code",[t._v("amino(ChainConfig)")])])])])]),t._v(" "),a("h2",{attrs:{id:"commitstatedb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitstatedb"}},[t._v("#")]),t._v(" "),a("code",[t._v("CommitStateDB")])]),t._v(" "),a("p",[a("code",[t._v("StateDB")]),t._v("s within the ethereum protocol are used to store anything within the IAVL tree. "),a("code",[t._v("StateDB")]),t._v("s\ntake care of caching and storing nested states. It's the general query interface to retrieve\ncontracts and accounts")]),t._v(" "),a("p",[t._v("The Ethermint "),a("code",[t._v("CommitStateDB")]),t._v(" is a concrete type that implements the EVM "),a("code",[t._v("StateDB")]),t._v(" interface.\nInstead of using a trie and database for querying and persistence, the "),a("code",[t._v("CommitStateDB")]),t._v(" uses\n"),a("code",[t._v("KVStores")]),t._v(" (key-value stores) and Cosmos SDK "),a("code",[t._v("Keeper")]),t._v("s to facilitate state transitions.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("CommitStateDB")]),t._v(" contains a store key that allows the DB to write to a concrete subtree of the\nmultistore that is only accessible to the EVM module.")]),t._v(" "),a("p",[a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gQ29tbWl0U3RhdGVEQiBpbXBsZW1lbnRzIHRoZSBHZXRoIHN0YXRlLlN0YXRlREIgaW50ZXJmYWNlLiBJbnN0ZWFkIG9mIHVzaW5nCi8vIGEgdHJpZSBhbmQgZGF0YWJhc2UgZm9yIHF1ZXJ5aW5nIGFuZCBwZXJzaXN0ZW5jZSwgdGhlIEtlZXBlciB1c2VzIEtWU3RvcmVzCi8vIGFuZCBhbiBhY2NvdW50IG1hcHBlciBpcyB1c2VkIHRvIGZhY2lsaXRhdGUgc3RhdGUgdHJhbnNpdGlvbnMuCi8vCi8vIFRPRE86IFRoaXMgaW1wbGVtZW50YXRpb24gaXMgc3ViamVjdCB0byBjaGFuZ2UgaW4gcmVnYXJkcyB0byBpdHMgc3RhdGVmdWxsCi8vIG1hbm5lci4gSW4gb3RoZXJ3b3JkcywgaG93IHRoaXMgcmVsYXRlcyB0byB0aGUga2VlcGVyIGluIHRoaXMgbW9kdWxlLgp0eXBlIENvbW1pdFN0YXRlREIgc3RydWN0IHsKCS8vIFRPRE86IFdlIG5lZWQgdG8gc3RvcmUgdGhlIGNvbnRleHQgYXMgcGFydCBvZiB0aGUgc3RydWN0dXJlIGl0c2VsZiBvcHBvc2VkCgkvLyB0byBiZWluZyBwYXNzZWQgYXMgYSBwYXJhbWV0ZXIgKGFzIGl0IHNob3VsZCBiZSkgaW4gb3JkZXIgdG8gaW1wbGVtZW50IHRoZQoJLy8gU3RhdGVEQiBpbnRlcmZhY2UuIFBlcmhhcHMgdGhlcmUgaXMgYSBiZXR0ZXIgd2F5LgoJY3R4IHNkay5Db250ZXh0CgoJc3RvcmVLZXkgICAgICBzZGsuU3RvcmVLZXkKCXBhcmFtU3BhY2UgICAgcGFyYW1zLlN1YnNwYWNlCglhY2NvdW50S2VlcGVyIEFjY291bnRLZWVwZXIKCgkvLyBhcnJheSB0aGF0IGhvbGQgJ2xpdmUnIG9iamVjdHMsIHdoaWNoIHdpbGwgZ2V0IG1vZGlmaWVkIHdoaWxlIHByb2Nlc3NpbmcgYQoJLy8gc3RhdGUgdHJhbnNpdGlvbgoJc3RhdGVPYmplY3RzICAgICAgICAgW11zdGF0ZUVudHJ5CglhZGRyZXNzVG9PYmplY3RJbmRleCBtYXBbZXRoY21uLkFkZHJlc3NdaW50IC8vIG1hcCBmcm9tIGFkZHJlc3MgdG8gdGhlIGluZGV4IG9mIHRoZSBzdGF0ZSBvYmplY3RzIHNsaWNlCglzdGF0ZU9iamVjdHNEaXJ0eSAgICBtYXBbZXRoY21uLkFkZHJlc3Ndc3RydWN0e30KCgkvLyBUaGUgcmVmdW5kIGNvdW50ZXIsIGFsc28gdXNlZCBieSBzdGF0ZSB0cmFuc2l0aW9uaW5nLgoJcmVmdW5kIHVpbnQ2NAoKCXRoYXNoLCBiaGFzaCBldGhjbW4uSGFzaAoJdHhJbmRleCAgICAgIGludAoJbG9nU2l6ZSAgICAgIHVpbnQKCgkvLyBUT0RPOiBEZXRlcm1pbmUgaWYgd2UgYWN0dWFsbHkgbmVlZCB0aGlzIGFzIHdlIGRvIG5vdCBuZWVkIHByZWltYWdlcyBpbgoJLy8gdGhlIFNESywgYnV0IGl0IHNlZW1zIHRvIGJlIHVzZWQgZWxzZXdoZXJlIGluIEdldGguCglwcmVpbWFnZXMgICAgICAgICAgIFtdcHJlaW1hZ2VFbnRyeQoJaGFzaFRvUHJlaW1hZ2VJbmRleCBtYXBbZXRoY21uLkhhc2hdaW50IC8vIG1hcCBmcm9tIGhhc2ggdG8gdGhlIGluZGV4IG9mIHRoZSBwcmVpbWFnZXMgc2xpY2UKCgkvLyBEQiBlcnJvci4KCS8vIFN0YXRlIG9iamVjdHMgYXJlIHVzZWQgYnkgdGhlIGNvbnNlbnN1cyBjb3JlIGFuZCBWTSB3aGljaCBhcmUKCS8vIHVuYWJsZSB0byBkZWFsIHdpdGggZGF0YWJhc2UtbGV2ZWwgZXJyb3JzLiBBbnkgZXJyb3IgdGhhdCBvY2N1cnMKCS8vIGR1cmluZyBhIGRhdGFiYXNlIHJlYWQgaXMgbWVtby1pemVkIGhlcmUgYW5kIHdpbGwgZXZlbnR1YWxseSBiZSByZXR1cm5lZAoJLy8gYnkgU3RhdGVEQi5Db21taXQuCglkYkVyciBlcnJvcgoKCS8vIEpvdXJuYWwgb2Ygc3RhdGUgbW9kaWZpY2F0aW9ucy4gVGhpcyBpcyB0aGUgYmFja2JvbmUgb2YKCS8vIFNuYXBzaG90IGFuZCBSZXZlcnRUb1NuYXBzaG90LgoJam91cm5hbCAgICAgICAgKmpvdXJuYWwKCXZhbGlkUmV2aXNpb25zIFtdcmV2aXNpb24KCW5leHRSZXZpc2lvbklEIGludAoKCS8vIFBlci10cmFuc2FjdGlvbiBhY2Nlc3MgbGlzdAoJYWNjZXNzTGlzdCAqYWNjZXNzTGlzdAoKCS8vIG11dGV4IGZvciBzdGF0ZSBkZWVwIGNvcHlpbmcKCWxvY2sgc3luYy5NdXRleAp9"}})],1),t._v(" "),a("p",[t._v("The functionalities provided by the Ethermint "),a("code",[t._v("StateDB")]),t._v(" are:")]),t._v(" "),a("ul",[a("li",[t._v("CRUD of "),a("code",[t._v("stateObject")]),t._v("s and accounts:\n"),a("ul",[a("li",[t._v("Balance")]),t._v(" "),a("li",[t._v("Code")]),t._v(" "),a("li",[t._v("Nonce")]),t._v(" "),a("li",[t._v("State")])])]),t._v(" "),a("li",[t._v("EVM module parameter getter and setter")]),t._v(" "),a("li",[t._v("State transition logic\n"),a("ul",[a("li",[t._v("Preparation: transaction index and hash, block hash")])])]),t._v(" "),a("li",[t._v("CRUD of transaction logs")]),t._v(" "),a("li",[t._v("Aggregate queries")]),t._v(" "),a("li",[t._v("Snapshot state\n"),a("ul",[a("li",[t._v("Identify current state with a revision")]),t._v(" "),a("li",[t._v("Revert state to a given revision")])])]),t._v(" "),a("li",[t._v("State transition and persistence\n"),a("ul",[a("li",[t._v("Preparation: tx and block context")]),t._v(" "),a("li",[t._v("Commit state objects")]),t._v(" "),a("li",[t._v("Finalise state objects")]),t._v(" "),a("li",[t._v("Export state for upgrades")])])]),t._v(" "),a("li",[t._v("Auxiliary functions\n"),a("ul",[a("li",[t._v("Copy state")]),t._v(" "),a("li",[t._v("Reset state")])])])]),t._v(" "),a("h2",{attrs:{id:"state-objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-objects"}},[t._v("#")]),t._v(" State Objects")]),t._v(" "),a("p",[t._v("State objects are used by the VM which is unable to deal with database-level errors. Any error that occurs during a database read is memoized here and will eventually be returned by "),a("code",[t._v("StateDB.Commit")]),t._v(".")]),t._v(" "),a("p",[t._v("The Ethermint "),a("code",[t._v("stateObject")]),t._v(" is a concrete type that mimics the functionality from the "),a("code",[t._v("go-ethereum")]),t._v("\nprivate "),a("code",[t._v("stateObject")]),t._v(" type. It keeps track of the interim values for the contract bytecode, storage\nstate and balance of an "),a("code",[t._v("EthAccount")]),t._v(".")]),t._v(" "),a("p",[t._v('The storage entries (original and "dirty") for each state object are represented as slices instead\nof maps since latter can cause non-deterministic block app hashes, which result in the chain\nhalting.')]),t._v(" "),a("p",[t._v("When a "),a("code",[t._v("stateObject")]),t._v(" is committed during "),a("code",[t._v("EndBlock")]),t._v(". It sets sets the account contract code to store, as well as the dirty storage state. The account's nonce and the account balance are updated by calling the "),a("code",[t._v("auth")]),t._v(" and "),a("code",[t._v("bank")]),t._v(" module setter functions, respectively.")]),t._v(" "),a("p",[a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"Ly8gc3RhdGVPYmplY3QgcmVwcmVzZW50cyBhbiBFdGhlcmV1bSBhY2NvdW50IHdoaWNoIGlzIGJlaW5nIG1vZGlmaWVkLgovLwovLyBUaGUgdXNhZ2UgcGF0dGVybiBpcyBhcyBmb2xsb3dzOgovLyBGaXJzdCB5b3UgbmVlZCB0byBvYnRhaW4gYSBzdGF0ZSBvYmplY3QuCi8vIEFjY291bnQgdmFsdWVzIGNhbiBiZSBhY2Nlc3NlZCBhbmQgbW9kaWZpZWQgdGhyb3VnaCB0aGUgb2JqZWN0LgovLyBGaW5hbGx5LCBjYWxsIENvbW1pdFRyaWUgdG8gd3JpdGUgdGhlIG1vZGlmaWVkIHN0b3JhZ2UgdHJpZSBpbnRvIGEgZGF0YWJhc2UuCnR5cGUgc3RhdGVPYmplY3Qgc3RydWN0IHsKCWNvZGUgdHlwZXMuQ29kZSAvLyBjb250cmFjdCBieXRlY29kZSwgd2hpY2ggZ2V0cyBzZXQgd2hlbiBjb2RlIGlzIGxvYWRlZAoJLy8gU3RhdGUgb2JqZWN0cyBhcmUgdXNlZCBieSB0aGUgY29uc2Vuc3VzIGNvcmUgYW5kIFZNIHdoaWNoIGFyZQoJLy8gdW5hYmxlIHRvIGRlYWwgd2l0aCBkYXRhYmFzZS1sZXZlbCBlcnJvcnMuIEFueSBlcnJvciB0aGF0IG9jY3VycwoJLy8gZHVyaW5nIGEgZGF0YWJhc2UgcmVhZCBpcyBtZW1vaXplZCBoZXJlIGFuZCB3aWxsIGV2ZW50dWFsbHkgYmUgcmV0dXJuZWQKCS8vIGJ5IFN0YXRlREIuQ29tbWl0LgoJb3JpZ2luU3RvcmFnZSBTdG9yYWdlIC8vIFN0b3JhZ2UgY2FjaGUgb2Ygb3JpZ2luYWwgZW50cmllcyB0byBkZWR1cCByZXdyaXRlcwoJZGlydHlTdG9yYWdlICBTdG9yYWdlIC8vIFN0b3JhZ2UgZW50cmllcyB0aGF0IG5lZWQgdG8gYmUgZmx1c2hlZCB0byBkaXNrCgoJLy8gREIgZXJyb3IKCWRiRXJyICAgZXJyb3IKCXN0YXRlREIgKkNvbW1pdFN0YXRlREIKCWFjY291bnQgKnR5cGVzLkV0aEFjY291bnQKCglrZXlUb09yaWdpblN0b3JhZ2VJbmRleCBtYXBbZXRoY21uLkhhc2hdaW50CglrZXlUb0RpcnR5U3RvcmFnZUluZGV4ICBtYXBbZXRoY21uLkhhc2hdaW50CgoJYWRkcmVzcyBldGhjbW4uQWRkcmVzcwoKCS8vIGNhY2hlIGZsYWdzCgkvLwoJLy8gV2hlbiBhbiBvYmplY3QgaXMgbWFya2VkIHN1aWNpZGVkIGl0IHdpbGwgYmUgZGVsZXRlIGZyb20gdGhlIHRyaWUgZHVyaW5nCgkvLyB0aGUgJnF1b3Q7dXBkYXRlJnF1b3Q7IHBoYXNlIG9mIHRoZSBzdGF0ZSB0cmFuc2l0aW9uLgoJZGlydHlDb2RlIGJvb2wgLy8gdHJ1ZSBpZiB0aGUgY29kZSB3YXMgdXBkYXRlZAoJc3VpY2lkZWQgIGJvb2wKCWRlbGV0ZWQgICBib29sCn0="}})],1),t._v(" "),a("p",[t._v("The functionalities provided by the Ethermint "),a("code",[t._v("stateObject")]),t._v(" are:")]),t._v(" "),a("ul",[a("li",[t._v("Storage state getter and setter (temporary)")]),t._v(" "),a("li",[t._v("Contract bytecode getter and setter (temporary)")]),t._v(" "),a("li",[t._v("Balance getter and setter (temporary)")]),t._v(" "),a("li",[t._v("Balance accounting (temporary)")]),t._v(" "),a("li",[t._v("Account nonce and address getter and setter (temporary)")]),t._v(" "),a("li",[t._v("Auxiliary functions: copy, RLP encoding, empty")]),t._v(" "),a("li",[t._v("Commit state object (final)")])])])}),[],!1,null,null,null);e.default=l.exports}}]);